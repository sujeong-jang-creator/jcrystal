
1. ELK 설치
    다운로드
    압축해제
    디렉토리 이름 축소
    ElasticSearch(ES)의 bin/ElasticSearch.bat 실행
        - 브라우저로 접속 확인 http://localhost:9200
        - 버전, 실행되는 pc의 이름..

    Kibana bin/kibana.bat 실행
        - 오랜 시간 대기하면서 실행
        - ES가 실행된 상태여야만 정상 실행
        - http://localhost:5601 접속 -> Dev Tools에서 crud


2. 두 솔루션의 구동 원리
    1. json 형식으로 저장
        - 저장 작업은 kibana에서 함 ~ sqlplus
        - 저장은 ES에 저장 ~ oracle DB

    2 postman 으로 crud 작업시 url
        http://127.0.0.1:9200


3. JSON 저장 구조

    1. REST API 관점에서 crud

    POST hello_index/_doc_1     : 방식 table명/_doc/ 데이터 구분을 위한 pk url 구성값
    {                           : json 포멧의 데이터 구조
        "message" : "힙합",     : message key로 힙핮 저장 및 수정 의미
        "name" : "NAS"
    }

    postman 사용시 request 정보 구성에 있어서 JSON 포멧 설정 필수 


4. 모르고하는 crud
    1. 제공 데이터
    - json 문법이 ok이기때문에 한번에데이터를 구분없이 저장하게 되는 구조
        {"employees":[
        { "firstName":"John", "lastName":"Doe" },
        { "firstName":"Anna", "lastName":"Smith" },
        { "firstName":"Peter", "lastName":"Jones" }
        ]}

    2. 저장->검색->수정->검색->삭제->검색
    3. 해결해 나가는 방식에 대한 연구
        실행 불가? 에러 메세지 확인
        방법 모색
            { "firstName":"John", "lastName":"Doe" }
            성공 시 필요요소 있다면 연구...

    4. 강사가 제공한 bulk
        POST _bulk
        { "index" : { "_index" : "employees", "_id" : "1" } }
        { "firstName":"John", "lastName":"Doe" }
        { "index" : { "_index" : "employees", "_id" : "2" } }
        { "firstName":"Anna", "lastName":"Smith" }
        { "index" : { "_index" : "employees", "_id" : "3" } }
        { "firstName":"Peter", "lastName":"Jones" }
        GET employees
        GET employees/_search/?q=Smith


        - ES : 대용량 데이터를 빠르게 검색 활용 가능ㄴ하게 해주는 엔진이 이미 내장
        대용량 데이터는 사용자들이 crud
        해당 문법은 JSON 포멧이기만 하면 다 허용(정형 구조가 아님)

        - 단 db의 sql처럼 ES에서도 명확하게 분
            : ES 자체적인 문법 학습
            : REST API로 구현된 구조 (REST ful app)

        - 대용량 데이터를 한번에 여러가지를 ES에 저장하기 위한 문법
        - _bulk : 다량의 데이터 활용 표현

        POST _bulk
        { "index" : { "_index" : "employees", "_id" : "1" } }
        { "firstName":"John", "lastName":"Doe" }

        - "_index" : "employees" -> table 명이 employees
        - "_id" : "1" : id 라는 컬럼에 pk 값으로 1 저장 의미
                        _id es에서 중복되지 않는 데이터 칼럼 의미

        - { "firstName":"John", "lastName":"Doe" } : 
        이미 존재하는 employees table에 id 컬럼이 1인 row 값으로 저장하고자 하는 데이터값들


    5. ES 특징
        1. 작업절차
            1. 문법 오류가 없는 JSON 데이터만 저장  
                table이라는 index가 생성
                각 데이터에 적합한 field읭 타입이 자동 적용 
                저장 데이터가 하나의 row로 저장

        2. 초반 table 생성처럼 각 field별로 타입 지정 후에 데이터 저장

        * RDBMS 특징
            table 생성 직후에만 데이터 저장
        



* https://querydsl.com/static/querydsl/4.0.1/reference/ko-KR/html_single/


    6. review : 사용 Tool
        1. kibana(dev tool)
            - 자동 완성 기능 필수
        2. postman
        3. head - 크롬 확장 plugin
            - 실시간 데이터 확인 및 활용 권장
        4. curl - 도스 창 명령어로 crud 작업 가능함을 보여드리기만...

        **슈정 내일 본격적으로 나간댕

-------------------------------------------


kibana에 입력한 코드!

POST _bulk
{ "index" : { "_index" : "employees", "_id" : "1" } }
{ "firstName":"John", "lastName":"Doe" }
{ "index" : { "_index" : "employees", "_id" : "2" } }
{ "firstName":"Anna", "lastName":"Smith" }
{ "index" : { "_index" : "employees", "_id" : "3" } }
{ "firstName":"Peter", "lastName":"Jones" }
GET employees
GET employees/_search/?q=Smith

# acount table 생성 및 데이터 저장
# id가 4인 경우 데이터 누락임에도 다른 데이터 정상 저장 
POST _bulk
{"index":{"_index":"account","_id":"1"}}
{"account_number":1,"balance":3926,"firstname":"Amber","lastname":"Duke","age":7,"gender":"M","address":"880 Holmes Lane","employer":"Pyrami","email":"amberduke@pyrami.com","city":"Brogan","state":"IL"}
{"index":{"_index":"account","_id":"2"}}
{"account_number":2,"balance":5282,"firstname":"Hattie","lastname":"Bond","age":7,"gender":"M","address":"271 Bristol Street","employer":"Netagy","email":"hattiebond@netagy.com","city":"Dante","state":"TN"}
{"index":{"_index":"account","_id":"3"}}
{"account_number":3,"balance":7838,"firstname":"Nanette","lastname":"Bates","age":28,"gender":"F","address":"789 Madison Street","employer":"Quility","email":"nanettebates@quility.com","city":"Nogal","state":"VA"}
{"index":{"_index":"account","_id":"4"}}


# _search
#control+enter - >실행 단축키
GET account/_search/?q=F

# gender가 M인 데이터 검색
GET account/_search/?q=M
GET account/_search/?q=gender:M

# gender가 M 인 데이터 그리고 state가 TN인 데이터 검색
GET account/_search/?q=gender:M AND state:TN


# 여기는 코드만 돌려보고
# 내일부터 본격적으로 한다구 하셔써!

DELETE my_index
POST my_index/_bulk
{"index":{"_id":1}}
{"message":"죽는 날까지 하늘을 우러러 한 점 부끄럼이 없기를"}
{"index":{"_id":2}}
{"message":"죽는 날까지 하늘을 우러러 한 점 부끄럼이 없기를, 잎새에 이는 바람에도 나는 괴로워했다"}
{"index":{"_id":3}}
{"message":"죽는 날까지 하늘을 우러러 한 점 부끄럼이 없기를, 잎새에 이는 바람에도 너는 괴로워했다"}
{"index":{"_id":4}}
{"message":"chrome google Chrome Google"}
{"index":{"_id":5}}
{"message":"하늘사 Google Chrome"}
{"index":{"_id":6}}
{"message":"pink"}
{"index":{"_id":7}}
{"message":"pinkRed"}
{"index":{"_id":8}}
{"message":"pink red blue"}
{"index":{"_id":9}}
{"message":"pink red blue black"}
{"index":{"_id":10}}
{"message":"pink red blue black green"}
{"index":{"_id":11}}
{"message":"pink blue red black green"}
{"index":{"_id":12}}
{"message":"pink pink"}


GET my_index
GET my_index/_search
GET my_index/_doc/1





<----예진---->
GET _search
{
  "query": {
    "match_all": {}
  }
}

# table생성 및 데이터 저장
POST hello_index/_doc/1
{
  "message" : "힙합",
  "name" : "NAS"
}

# select와 동일한 검색
GET hello_index/_doc/1
PUT hello_index/_doc/1
{
  "message": "쑤정"
}
GET hello_index/_doc/1

# pk1 즉 id가 1인 데이터 삭제
DELETE hello_index/_doc/1
GET hello_index/_doc/1

POST _bulk
{ "index" : { "_index" : "employees", "_id" : "1" } }
{ "firstName":"John", "lastName":"Doe" }
{ "index" : { "_index" : "employees", "_id" : "2" } }
{ "firstName":"Anna", "lastName":"Smith" }
{ "index" : { "_index" : "employees", "_id" : "3" } }
{ "firstName":"Peter", "lastName":"Jones" }
GET employees
GET employees/_search/?q=Smith

# _id 사전 설정 없이 저장
POST _bulk
{ "index" : { "_index" : "employees2"} }
{ "firstName":"John", "lastName":"Doe" }
{ "index" : { "_index" : "employees2"} }
{ "firstName":"Anna", "lastName":"Smith" }
{ "index" : { "_index" : "employees2"} }
{ "firstName":"Peter", "lastName":"Jones" }

# account table 생성 및 데이터 저장
# id가 4인 경우 데이터 누락임에도 다른 데이터 정상 저장
POST _bulk
{"index":{"_index":"account", "_id":"1"}}
{"account_number":1,"balance":3926,"firstname":"Amber","lastname":"Duke","age":7,"gender":"M","address":"880 Holmes Lane","employer":"Pyrami","email":"amberduke@pyrami.com","city":"Brogan","state":"IL"}
{"index":{"_index":"account", "_id":"2"}}
{"account_number":2,"balance":5282,"firstname":"Hattie","lastname":"Bond","age":7,"gender":"M","address":"271 Bristol Street","employer":"Netagy","email":"hattiebond@netagy.com","city":"Dante","state":"TN"}
{"index":{"_index":"account", "_id":"3"}}
{"account_number":3,"balance":7838,"firstname":"Nanette","lastname":"Bates","age":28,"gender":"F","address":"789 Madison Street","employer":"Quility","email":"nanettebates@quility.com","city":"Nogal","state":"VA"}
{"index":{"_index":"account", "_id":"4"}}

GET account

# F값을 보유하고 있는 데이터 검색
GET account/_search/?q=F

# M값을 보유하고 있는 데이터 검색
GET account/_search/?q=M

# gender가 M인 데이터 검색
GET account/_search/?q=gender:M

# gender가 M이고 state가 TN인 데이터 검색
GET account/_search/?q=gender:M AND state:TN
GET account/_search
{
  "query": {
    "match": {
      "gender": "F"
    }
  }
}
DELETE my_index
POST my_index/_bulk
{"index":{"_id":1}}
{"message":"죽는 날까지 하늘을 우러러 한 점 부끄럼이 없기를"}
{"index":{"_id":2}}
{"message":"죽는 날까지 하늘을 우러러 한 점 부끄럼이 없기를, 잎새에 이는 바람에도 나는 괴로워했다"}
{"index":{"_id":3}}
{"message":"죽는 날까지 하늘을 우러러 한 점 부끄럼이 없기를, 잎새에 이는 바람에도 너는 괴로워했다"}
{"index":{"_id":4}}
{"message":"chrome google Chrome Google"}
{"index":{"_id":5}}
{"message":"하늘사 Google Chrome"}
{"index":{"_id":6}}
{"message":"pink"}
{"index":{"_id":7}}
{"message":"pinkRed"}
{"index":{"_id":8}}
{"message":"pink red blue"}
{"index":{"_id":9}}
{"message":"pink red blue black"}
{"index":{"_id":10}}
{"message":"pink red blue black green"}
{"index":{"_id":11}}
{"message":"pink blue red black green"}
{"index":{"_id":12}}
{"message":"pink pink"}
GET my_index
GET my_index/_search
GET my_index/_doc/1






